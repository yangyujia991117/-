---
title: 3.22CTO一面
mdate: 2023-03-27 11:17:11
---
##

#### 1、从项目开始谈，问了酒店管理系统，优惠卷的核销是怎么核销的，优惠卷状态是在什么时候改变的，订单生成的时候还是发起支付的时候（可以再深入理解一下）

#### 2、怎么判断对象死亡，以及对象怎么回收的（还是记不住）

#### 3、要给100G大小的文件里面的数据排序，给出具体的操作过程 （我当时给出了我觉得应该用的排序算法，但他强调具体操作，我当时决定还要怎么具体呀 笑死）

​     （面试官说要听我的思路，然后从每个流程讲一下，比如数据读到内存，内存不够，那么怎么解决，以及再过程中遇到其他什么问题，要怎么解决，排序用什么）

#### 4、接口与抽象类的区别，讲一个具体的只能用抽象类的场景

#### 5、强引用、弱引用、虚引用

#### 6、OSI七层模型，每一层做的是什么 （简单说说就好）

#### 7、Java源代码了解吗？不了解  

#### 8、hashmap的put()操作的底层逻辑   不知道 微笑
0.首先会判断数组是否为空或者长度是否为 0，为空或者长度为 0 就进行 resize 扩容操作。
在插入键值对的时候调用一个名为 hash 的函数，
1.取 hash：先判断 key 是否为 null，如果为 null 直接令 hash=0,否则取得 key.hashcode，然后计算 hash=hashcode^(hashcode>>>16）
2.算这个元素应该放到哪个数组下标：index=hash&(数组长度-1），实际上是做了 hash%数组长度的操作，但因为 hashmap 自动把数组长度变为 2 的幂次方，所以可以将耗时较长的取模操作转换为简单的位运算，结果都一样。
3.如果定位到的数组位置没有元素就直接插入。如果定位到的数组位置有元素就和要插入的 key 比较，如果 key 相同就直接覆盖，如果 key 不相同，就判断该位置的那个节点是否是一个树节点，如果是就调用e = ((TreeNode<K,V>)p).putTreeVal(this, tab, hash, key, value)将元素添加进入。如果不是就遍历链表插入链表尾部，并且判断链表长度是否大于 8，大于 8 的时候再判断数组长度是否大于 64，如果大于 64 则进行链表转红黑树的操作，否则调用 resize 对数组进行扩容。
4.最后 size++,如果大于threshold 的话就 resize 扩容。
注意：扩容的时候是将数组扩容为原来的两倍，然后要遍历每个节点，利用每个节点的 hash &新数组长度-1 得到新的数组下标
#### 9、MySQL用的索引结构
b+树
#### 10、解释B+树，以及他为什么能快速找到数据

#### 11、怎么判断索引是无效的 

#### 12、解释一下快排  时间复杂度

#### 13、怎么算有向权重图最短路径，我答深度优先遍历  他问复杂度 我懵了  我当时觉得应该和图的节点数量有关吧  然后就没答出来  他就说看来复杂度你不太熟呀  害